<?php
/**
 * Created by PhpStorm.
 * User: andrey
 * Date: 14.04.16
 * Time: 16:26
 */

namespace msdie\modules\comments\models;


use yii\base\Model;
use yii\helpers\ArrayHelper;

class CommentsUpdateForm extends Model
{
    public $id;
    public $title;
    public $text;
    public $status_id;
    public $parent_id;
    public $created_at;
    public $updated_at;
    public $fields;
    public $link;


    public function __construct($id,array $config=[])
    {
        parent::__construct($config);

        if (($model = Comments::findOne($id)) === null) {
            throw new \yii\web\NotFoundHttpException('The requested page does not exist.');
        }

        foreach($model->attributes as $key => $value)
        {
            $this->$key = $value;
        }


        if($model->commentsFields!=null)
        {
            $commentFields = $model->commentsFields;
            $commentFields=ArrayHelper::index($commentFields, 'field_name');
        }

        foreach(\Yii::$app->controller->module->fields as $field)
        {
            if(isset($commentFields[$field['name']]))
                $this->fields[$field['name']] = array_merge($commentFields[$field['name']]->attributes,[
                    'label'=>$field['label'],
                    'fieldType'=>isset($field['fieldType'])?$field['fieldType']:'textInput',
                    'items' => isset($field['items'])?$field['items']:null,
                ]);
            else {
                $this->fields[$field['name']] =[
                    'comments_id'=>$model->id,
                    'field_name'=>$field['name'],
                    'value'=>'',
                    'label'=>$field['label'],
                    'fieldType'=>isset($field['fieldType'])?$field['fieldType']:'textInput',
                    'items' => isset($field['items'])?$field['items']:null,
                ];
            }
        }

        $this->link = $model->commentsLink;

    }


//    public function attributes()
//    {
//        return
//
////        return parent::attributes(); // TODO: Change the autogenerated stub
//    }

    public function rules()
    {
        $comments = new Comments();
        return $comments->rules();
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'status_id' => 'Status ID',
            'parent_id' => 'Parent ID',
            'title' => 'Title',
            'text' => 'Text',
        ];
    }

}